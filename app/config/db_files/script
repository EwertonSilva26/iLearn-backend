-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
-- -----------------------------------------------------
-- Schema ilearn_db
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema ilearn_db
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `ilearn_db` DEFAULT CHARACTER SET latin1 ;
USE `ilearn_db` ;

-- -----------------------------------------------------
-- Table `ilearn_db`.`tb_answer`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ilearn_db`.`tb_answer` (
  `id_answer` INT(11) NOT NULL AUTO_INCREMENT,
  `student_answer` TEXT NULL DEFAULT NULL,
  PRIMARY KEY (`id_answer`))
ENGINE = InnoDB
AUTO_INCREMENT = 18
DEFAULT CHARACTER SET = latin1;


-- -----------------------------------------------------
-- Table `ilearn_db`.`tb_class`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ilearn_db`.`tb_class` (
  `id_class` INT(11) NOT NULL AUTO_INCREMENT,
  `class_name` VARCHAR(100) NULL DEFAULT NULL,
  `class_code` VARCHAR(100) NULL DEFAULT NULL,
  PRIMARY KEY (`id_class`),
  UNIQUE INDEX `class_name` (`class_name` ASC),
  UNIQUE INDEX `class_code` (`class_code` ASC))
ENGINE = InnoDB
AUTO_INCREMENT = 24
DEFAULT CHARACTER SET = latin1;


-- -----------------------------------------------------
-- Table `ilearn_db`.`tb_question`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ilearn_db`.`tb_question` (
  `id_question` INT(11) NOT NULL AUTO_INCREMENT,
  `title` VARCHAR(200) NULL DEFAULT NULL,
  `question` TEXT NULL DEFAULT NULL,
  `teacher_answer` TEXT NULL DEFAULT NULL,
  `tip` VARCHAR(500) NULL DEFAULT NULL,
  `hasFeedBack` TINYINT(1) NULL DEFAULT '0',
  PRIMARY KEY (`id_question`))
ENGINE = InnoDB
AUTO_INCREMENT = 38
DEFAULT CHARACTER SET = latin1;


-- -----------------------------------------------------
-- Table `ilearn_db`.`tb_user`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ilearn_db`.`tb_user` (
  `id_user` INT(11) NOT NULL AUTO_INCREMENT,
  `user_email` VARCHAR(50) NOT NULL,
  `user_pwd` VARCHAR(60) NOT NULL,
  PRIMARY KEY (`id_user`),
  UNIQUE INDEX `user_email` (`user_email` ASC))
ENGINE = InnoDB
AUTO_INCREMENT = 25
DEFAULT CHARACTER SET = latin1;


-- -----------------------------------------------------
-- Table `ilearn_db`.`tb_student`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ilearn_db`.`tb_student` (
  `id_student` INT(11) NOT NULL AUTO_INCREMENT,
  `student_first_name` VARCHAR(40) NULL DEFAULT NULL,
  `student_middle_name` VARCHAR(40) NULL DEFAULT NULL,
  `student_last_name` VARCHAR(40) NULL DEFAULT NULL,
  `id_user` INT(11) NULL DEFAULT NULL,
  PRIMARY KEY (`id_student`),
  INDEX `id_user` (`id_user` ASC),
  CONSTRAINT `tb_student_ibfk_1`
    FOREIGN KEY (`id_user`)
    REFERENCES `ilearn_db`.`tb_user` (`id_user`))
ENGINE = InnoDB
AUTO_INCREMENT = 22
DEFAULT CHARACTER SET = latin1;


-- -----------------------------------------------------
-- Table `ilearn_db`.`tb_teacher`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ilearn_db`.`tb_teacher` (
  `id_teacher` INT(11) NOT NULL AUTO_INCREMENT,
  `teacher_first_name` VARCHAR(40) NULL DEFAULT NULL,
  `teacher_middle_name` VARCHAR(40) NULL DEFAULT NULL,
  `teacher_last_name` VARCHAR(40) NULL DEFAULT NULL,
  `id_user` INT(11) NULL DEFAULT NULL,
  PRIMARY KEY (`id_teacher`),
  INDEX `id_user` (`id_user` ASC),
  CONSTRAINT `tb_teacher_ibfk_1`
    FOREIGN KEY (`id_user`)
    REFERENCES `ilearn_db`.`tb_user` (`id_user`))
ENGINE = InnoDB
AUTO_INCREMENT = 3
DEFAULT CHARACTER SET = latin1;


-- -----------------------------------------------------
-- Table `ilearn_db`.`tb_class_question_answer_student_teacher`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ilearn_db`.`tb_class_question_answer_student_teacher` (
  `id_class_question_answer_student_teacher` INT(11) NOT NULL AUTO_INCREMENT,
  `id_question` INT(11) NULL DEFAULT NULL,
  `id_answer` INT(11) NULL DEFAULT NULL,
  `id_student` INT(11) NULL DEFAULT NULL,
  `feedback` TEXT NULL DEFAULT NULL,
  `id_class` INT(11) NULL DEFAULT NULL,
  `percentage` VARCHAR(10) NULL DEFAULT NULL,
  `id_teacher` INT(11) NULL DEFAULT NULL,
  PRIMARY KEY (`id_class_question_answer_student_teacher`),
  INDEX `id_question` (`id_question` ASC),
  INDEX `id_answer` (`id_answer` ASC),
  INDEX `id_student` (`id_student` ASC),
  INDEX `id_class` (`id_class` ASC),
  INDEX `id_teacher` (`id_teacher` ASC),
  CONSTRAINT `tb_class_question_answer_student_teacher_ibfk_1`
    FOREIGN KEY (`id_question`)
    REFERENCES `ilearn_db`.`tb_question` (`id_question`),
  CONSTRAINT `tb_class_question_answer_student_teacher_ibfk_2`
    FOREIGN KEY (`id_answer`)
    REFERENCES `ilearn_db`.`tb_answer` (`id_answer`),
  CONSTRAINT `tb_class_question_answer_student_teacher_ibfk_3`
    FOREIGN KEY (`id_student`)
    REFERENCES `ilearn_db`.`tb_student` (`id_student`),
  CONSTRAINT `tb_class_question_answer_student_teacher_ibfk_4`
    FOREIGN KEY (`id_class`)
    REFERENCES `ilearn_db`.`tb_class` (`id_class`),
  CONSTRAINT `tb_class_question_answer_student_teacher_ibfk_5`
    FOREIGN KEY (`id_class`)
    REFERENCES `ilearn_db`.`tb_class` (`id_class`),
  CONSTRAINT `tb_class_question_answer_student_teacher_ibfk_6`
    FOREIGN KEY (`id_teacher`)
    REFERENCES `ilearn_db`.`tb_teacher` (`id_teacher`))
ENGINE = InnoDB
AUTO_INCREMENT = 26
DEFAULT CHARACTER SET = latin1;

USE `ilearn_db` ;

-- -----------------------------------------------------
-- procedure getAllQuestionsByClassCode
-- -----------------------------------------------------

DELIMITER $$
USE `ilearn_db`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `getAllQuestionsByClassCode`(classCode varchar(100))
BEGIN
		SELECT * FROM tb_class_question_answer_student_teacher AS tcqast
          INNER JOIN tb_class AS tc
          ON tcqast.id_class = tc.id_class
          INNER JOIN tb_question AS tq
          ON tcqast.id_question = tq.id_question
          WHERE tc.class_code = classCode
          group by tq.title
          order by tcqast.id_class_question_answer_student_teacher desc;
	
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure get_all_classes
-- -----------------------------------------------------

DELIMITER $$
USE `ilearn_db`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `get_all_classes`(userId INT)
BEGIN
	DECLARE userNumber INT;
	DECLARE teacherId INT;
    DECLARE studentId INT;

	SELECT COUNT(*) FROM tb_teacher WHERE id_user = userId INTO userNumber;
    
    IF userNumber > 0 THEN
		SELECT id_teacher FROM tb_teacher WHERE id_user = userId INTO teacherId;

		SELECT DISTINCT tc.class_name, tc.class_code
		FROM tb_class_question_answer_student_teacher AS tcqast
		INNER JOIN tb_teacher AS tt
		ON tt.id_teacher = tcqast.id_teacher
		INNER JOIN tb_class AS tc
		ON tc.id_class = tcqast.id_class
		WHERE tt.id_teacher = teacherId
        ORDER BY tc.class_name DESC;
	ELSE 
    	SELECT id_student FROM tb_student WHERE id_user = userId INTO studentId;

		SELECT DISTINCT tc.class_name, tc.class_code 
		FROM tb_class_question_answer_student_teacher AS tcqast
		INNER JOIN tb_student AS ts
		ON ts.id_student = tcqast.id_student
		INNER JOIN tb_class AS tc
		ON tcqast.id_class = tc.id_class
		WHERE ts.id_student = studentId
        ORDER BY tc.class_name DESC;

	END IF;  
	
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure insert_answer
-- -----------------------------------------------------

DELIMITER $$
USE `ilearn_db`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `insert_answer`(studentAnswer TEXT, idUser int, questionId int,
classCode varchar(100), questionPercentage varchar(10))
BEGIN
	DECLARE classId INT;
  	DECLARE answerId INT;
    DECLARE studentId INT;
    DECLARE idTeacher INT;

	INSERT INTO tb_answer (student_answer) VALUES (studentAnswer);
    
	SELECT id_student FROM tb_student WHERE id_user = idUser INTO studentId;
    SELECT id_class FROM tb_class WHERE class_code = classCode INTO classId;  
    SELECT id_answer FROM tb_answer WHERE student_answer = studentAnswer INTO answerId;
    SELECT DISTINCT id_teacher FROM tb_class_question_answer_student_teacher where id_question = questionId INTO idTeacher;

	SET FOREIGN_KEY_CHECKS=0;
    
    INSERT INTO tb_class_question_answer_student_teacher(id_question, id_answer, id_student, id_class, id_teacher, percentage) 
    VALUES(questionId, answerId, studentId, classId, idTeacher, questionPercentage);
    
    SET FOREIGN_KEY_CHECKS=1;
    
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure insert_class
-- -----------------------------------------------------

DELIMITER $$
USE `ilearn_db`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `insert_class`(className varchar(100), 
classCode varchar(100), userId INT)
BEGIN

	DECLARE classId INT;
    DECLARE teacherId INT;
    
	INSERT INTO tb_class (class_name, class_code) VALUES (className, classCode);
	
    SELECT id_class FROM tb_class WHERE class_name = className INTO classId;
    SELECT id_teacher FROM tb_teacher WHERE id_user = userId INTO teacherId;

	SET FOREIGN_KEY_CHECKS=0;
	INSERT INTO tb_class_question_answer_student_teacher (id_teacher, id_class) VALUES (teacherId, classId);
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure insert_question
-- -----------------------------------------------------

DELIMITER $$
USE `ilearn_db`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `insert_question`(questionTitle varchar(200), TextQuestion TEXT,
teacherAnswer TEXT, tipQuestion varchar(500), classCode varchar(100), userId INT)
BEGIN
	DECLARE questionId INT;
    DECLARE idClass INT;
    DECLARE idTeacher INT;

	SELECT id_teacher FROM tb_teacher WHERE id_user = userId INTO idTeacher;

	INSERT INTO tb_question (title, question, teacher_answer, tip) 
    VALUES (questionTitle, TextQuestion, teacherAnswer, tipQuestion);
	
	SELECT id_class FROM tb_class WHERE class_code = classCode INTO idClass;
    SELECT id_question FROM tb_question WHERE title = questionTitle INTO questionId;

	SET FOREIGN_KEY_CHECKS=0;
	INSERT INTO tb_class_question_answer_student_teacher (id_class, id_teacher, id_question) 
    VALUES (idClass, idTeacher, questionId);
    SET FOREIGN_KEY_CHECKS=1;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure insert_student_in_class
-- -----------------------------------------------------

DELIMITER $$
USE `ilearn_db`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `insert_student_in_class`(idStudent INT, classCode varchar(100))
BEGIN
	DECLARE classId INT;
    DECLARE studentId INT;
    
    SELECT id_class FROM tb_class WHERE class_code = classCode INTO classId;
    SELECT id_student FROM tb_student WHERE id_user = idStudent INTO studentId;
	
    SET FOREIGN_KEY_CHECKS=0;
    UPDATE tb_class_question_answer_student_teacher SET id_student = studentId
    WHERE id_class = classId;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure insert_user_student
-- -----------------------------------------------------

DELIMITER $$
USE `ilearn_db`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `insert_user_student`(email varchar(50), user_pwd varchar(60), 
student_name varchar(40), middle_name varchar(40), last_name varchar(40))
BEGIN
	DECLARE userId INT;

	INSERT INTO tb_user (user_email, user_pwd) VALUES (email, user_pwd);
	
    SELECT id_user FROM tb_user WHERE user_email = email INTO userId;

	INSERT INTO tb_student (student_first_name, student_middle_name, student_last_name, id_user) 
	VALUES (student_name, middle_name, last_name, userId);
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure insert_user_teacher
-- -----------------------------------------------------

DELIMITER $$
USE `ilearn_db`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `insert_user_teacher`(email varchar(50), user_pwd varchar(60), 
teacher_name varchar(40), middle_name varchar(40), last_name varchar(40))
BEGIN
	DECLARE userId INT;

	INSERT INTO tb_user (user_email, user_pwd) VALUES (email, user_pwd);
	
    SELECT id_user FROM tb_user WHERE user_email = email INTO userId;

	INSERT INTO tb_teacher (teacher_first_name, teacher_middle_name, teacher_last_name, id_user) 
	VALUES (teacher_name, middle_name, last_name, userId);
END$$

DELIMITER ;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
